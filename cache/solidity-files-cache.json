{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out",
    "build_infos": "out/build-info",
    "sources": "src",
    "tests": "test",
    "scripts": "script",
    "libraries": [
      "lib"
    ]
  },
  "files": {
    "lib/abdk-libraries-solidity/ABDKMathQuad.sol": {
      "lastModificationDate": 1697559750522,
      "contentHash": "f7eb835f3f42668e5ff53b1d597fa3ae",
      "sourceName": "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ABDKMathQuad": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ABDKMathQuad.sol/ABDKMathQuad.json"
        }
      }
    },
    "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
      "lastModificationDate": 1697559780082,
      "contentHash": "29c520cd24ad9a3f2c9cf285fee25f05",
      "sourceName": "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AggregatorV3Interface": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "AggregatorV3Interface.sol/AggregatorV3Interface.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "lastModificationDate": 1697559747257,
      "contentHash": "5a20b2cad87ddb61c7a3a6af21289e28",
      "sourceName": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Ownable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Ownable.sol/Ownable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol": {
      "lastModificationDate": 1697559747259,
      "contentHash": "cff61718cd0b0d6498ffaa066563a9e5",
      "sourceName": "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "VestingWallet": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "VestingWallet.sol/VestingWallet.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
      "lastModificationDate": 1697559747286,
      "contentHash": "1535f8c0c68463f8c1b5239f7584e71f",
      "sourceName": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ReentrancyGuard": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ReentrancyGuard.sol/ReentrancyGuard.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
      "lastModificationDate": 1697559747289,
      "contentHash": "3ae5166c6827a9cf1a7a462d1632b464",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ERC20.sol/ERC20.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
      "lastModificationDate": 1697559747289,
      "contentHash": "df36f7051335cd1e748b1b6463b7fdd3",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC20.sol/IERC20.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
      "lastModificationDate": 1697559747292,
      "contentHash": "909ab67fc5c25033fe6cd364f8c056f9",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20Metadata": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC20Metadata.sol/IERC20Metadata.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
      "lastModificationDate": 1697559747292,
      "contentHash": "aa849939a4ae83a4dcb2dca9b3e9e707",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20Permit": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC20Permit.sol/IERC20Permit.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
      "lastModificationDate": 1697559747293,
      "contentHash": "1b5d667d3740d866eca0352758e59827",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SafeERC20": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SafeERC20.sol/SafeERC20.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
      "lastModificationDate": 1697559747298,
      "contentHash": "211ffd288c1588ba8c10eae668ca3c66",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {
        "Address": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Address.sol/Address.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "lastModificationDate": 1697559747299,
      "contentHash": "5f2c5c4b6af2dd4551027144797bc8be",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Context": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Context.sol/Context.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
      "lastModificationDate": 1697559747300,
      "contentHash": "48686fc32a22a3754b8e63321857dd2a",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Strings": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Strings.sol/Strings.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
      "lastModificationDate": 1697559747303,
      "contentHash": "fe63409d8a06818b926cf89e0ea88b1b",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Math": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Math.sol/Math.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
      "lastModificationDate": 1697559747303,
      "contentHash": "9488ebd4daacfee8ad04811600d7d061",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SignedMath": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SignedMath.sol/SignedMath.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
      "lastModificationDate": 1697559747304,
      "contentHash": "e029f029abc1fd2d85d54fd69086f076",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "EnumerableSet": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "EnumerableSet.sol/EnumerableSet.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol": {
      "lastModificationDate": 1697560772990,
      "contentHash": "9febff9d09f18af5306669dc276c4c43",
      "sourceName": "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "test.sol/DSTest.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/Base.sol": {
      "lastModificationDate": 1697560772990,
      "contentHash": "ee13c050b1914464f1d3f90cde90204b",
      "sourceName": "lib/solpretty/lib/forge-std/src/Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "CommonBase": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Base.sol/CommonBase.json"
        },
        "ScriptBase": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Base.sol/ScriptBase.json"
        },
        "TestBase": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Base.sol/TestBase.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/StdAssertions.sol": {
      "lastModificationDate": 1697560772990,
      "contentHash": "6cc2858240bcd443debbbf075490e325",
      "sourceName": "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdAssertions": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdAssertions.sol/StdAssertions.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/StdChains.sol": {
      "lastModificationDate": 1697560772990,
      "contentHash": "aff0685683a41d8e314d64aef646fe6f",
      "sourceName": "lib/solpretty/lib/forge-std/src/StdChains.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/solpretty/lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdChains": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdChains.sol/StdChains.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/StdCheats.sol": {
      "lastModificationDate": 1697560772990,
      "contentHash": "27745bb24c5568c75c3043277ee18bcb",
      "sourceName": "lib/solpretty/lib/forge-std/src/StdCheats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdCheats": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdCheats.sol/StdCheats.json"
        },
        "StdCheatsSafe": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdCheats.sol/StdCheatsSafe.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/StdError.sol": {
      "lastModificationDate": 1697560772991,
      "contentHash": "64c896e1276a291776e5ea5aecb3870a",
      "sourceName": "lib/solpretty/lib/forge-std/src/StdError.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdError": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdError.sol/stdError.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/StdInvariant.sol": {
      "lastModificationDate": 1697560772991,
      "contentHash": "6d12d54c05754ad4e03066726dca3a84",
      "sourceName": "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdInvariant": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdInvariant.sol/StdInvariant.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/StdJson.sol": {
      "lastModificationDate": 1697560772991,
      "contentHash": "2e1d13674e152408867795362d833c24",
      "sourceName": "lib/solpretty/lib/forge-std/src/StdJson.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/solpretty/lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "stdJson": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdJson.sol/stdJson.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/StdMath.sol": {
      "lastModificationDate": 1697560772991,
      "contentHash": "9da8f453eba6bb98f3d75bc6822bfb29",
      "sourceName": "lib/solpretty/lib/forge-std/src/StdMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdMath": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdMath.sol/stdMath.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/StdStorage.sol": {
      "lastModificationDate": 1697560772991,
      "contentHash": "4fc0ff0cb196a405e5a4c9fa1c6acccb",
      "sourceName": "lib/solpretty/lib/forge-std/src/StdStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/solpretty/lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdStorage": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdStorage.sol/stdStorage.json"
        },
        "stdStorageSafe": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdStorage.sol/stdStorageSafe.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/StdStyle.sol": {
      "lastModificationDate": 1697560772991,
      "contentHash": "6281165a12aa639705c691fccefd855e",
      "sourceName": "lib/solpretty/lib/forge-std/src/StdStyle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/solpretty/lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "StdStyle": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdStyle.sol/StdStyle.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/StdUtils.sol": {
      "lastModificationDate": 1697560772991,
      "contentHash": "3ce83748fd76644688f916c9cced545b",
      "sourceName": "lib/solpretty/lib/forge-std/src/StdUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdUtils": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdUtils.sol/StdUtils.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/Test.sol": {
      "lastModificationDate": 1697560772991,
      "contentHash": "c67db2c47c2e757cc33d38d6db0b1562",
      "sourceName": "lib/solpretty/lib/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Test.sol/Test.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/Vm.sol": {
      "lastModificationDate": 1697560772991,
      "contentHash": "b098c2721502365797aae8d0ee1babb8",
      "sourceName": "lib/solpretty/lib/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Vm": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Vm.sol/Vm.json"
        },
        "VmSafe": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Vm.sol/VmSafe.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/console.sol": {
      "lastModificationDate": 1697560772992,
      "contentHash": "100b8a33b917da1147740d7ab8b0ded3",
      "sourceName": "lib/solpretty/lib/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "console.sol/console.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/console2.sol": {
      "lastModificationDate": 1697560772992,
      "contentHash": "491ca717c1915995e78cc361485a3067",
      "sourceName": "lib/solpretty/lib/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "console2.sol/console2.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol": {
      "lastModificationDate": 1697560772993,
      "contentHash": "7b131ca1ca32ef6378b7b9ad5488b901",
      "sourceName": "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IMulticall3": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IMulticall3.sol/IMulticall3.json"
        }
      }
    },
    "lib/solpretty/lib/forge-std/src/safeconsole.sol": {
      "lastModificationDate": 1697560772993,
      "contentHash": "ac3b1bf5a444db5db3656021830258a8",
      "sourceName": "lib/solpretty/lib/forge-std/src/safeconsole.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "safeconsole": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "safeconsole.sol/safeconsole.json"
        }
      }
    },
    "lib/solpretty/lib/solady/src/utils/LibString.sol": {
      "lastModificationDate": 1697560773077,
      "contentHash": "4c8f673715b618e2e4c0dd5cc3b699f0",
      "sourceName": "lib/solpretty/lib/solady/src/utils/LibString.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "LibString": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "LibString.sol/LibString.json"
        }
      }
    },
    "lib/solpretty/src/LibFunctionCast.sol": {
      "lastModificationDate": 1697560773085,
      "contentHash": "b8edc2d43e3ccc27e457e9d0b09b3d35",
      "sourceName": "lib/solpretty/src/LibFunctionCast.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "LibFunctionCast": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "LibFunctionCast.sol/LibFunctionCast.json"
        }
      }
    },
    "lib/solpretty/src/LibUnicode.sol": {
      "lastModificationDate": 1697560773085,
      "contentHash": "f802b3965a90d58a3316cc12d0014aa5",
      "sourceName": "lib/solpretty/src/LibUnicode.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "Unicode": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "LibUnicode.sol/Unicode.json"
        }
      }
    },
    "lib/solpretty/src/SolKawai.sol": {
      "lastModificationDate": 1697561948879,
      "contentHash": "d2ac0b8794b2a3ae28b030579462b009",
      "sourceName": "lib/solpretty/src/SolKawai.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolPretty.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "SolKawai": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SolKawai.sol/SolKawai.json"
        }
      }
    },
    "lib/solpretty/src/SolPretty.sol": {
      "lastModificationDate": 1697563129875,
      "contentHash": "0ee07468963b33df7ad4ba7820c3d586",
      "sourceName": "lib/solpretty/src/SolPretty.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibUnicode.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SolPretty": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SolPretty.sol/SolPretty.json"
        }
      }
    },
    "lib/solpretty/src/SolPrettyTools.sol": {
      "lastModificationDate": 1697563434132,
      "contentHash": "1825982d723076ea3bac7d042225888d",
      "sourceName": "lib/solpretty/src/SolPrettyTools.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "SolPrettyTools": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SolPrettyTools.sol/SolPrettyTools.json"
        }
      }
    },
    "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
      "lastModificationDate": 1697559760634,
      "contentHash": "22f251436dd092764e3d07a8cdea6f40",
      "sourceName": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol"
      ],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3Pool": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3Pool.sol/IUniswapV3Pool.json"
        }
      }
    },
    "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
      "lastModificationDate": 1697559760444,
      "contentHash": "83d338eb1394008c808a20ac7c5bab0c",
      "sourceName": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolActions": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3PoolActions.sol/IUniswapV3PoolActions.json"
        }
      }
    },
    "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
      "lastModificationDate": 1697559760444,
      "contentHash": "25b71180ec9f5132a158334971ee2ace",
      "sourceName": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolDerivedState": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3PoolDerivedState.sol/IUniswapV3PoolDerivedState.json"
        }
      }
    },
    "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
      "lastModificationDate": 1697559760634,
      "contentHash": "fd36e4ca901988568ec1f3c5d4f58f84",
      "sourceName": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolErrors": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3PoolErrors.sol/IUniswapV3PoolErrors.json"
        }
      }
    },
    "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
      "lastModificationDate": 1697559760444,
      "contentHash": "05abb59ec113db1046f7dadc78bb297b",
      "sourceName": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolEvents": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3PoolEvents.sol/IUniswapV3PoolEvents.json"
        }
      }
    },
    "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
      "lastModificationDate": 1697559760444,
      "contentHash": "e236e09a9d654fb2f20a6da5dba2bd2f",
      "sourceName": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolImmutables": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3PoolImmutables.sol/IUniswapV3PoolImmutables.json"
        }
      }
    },
    "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
      "lastModificationDate": 1697559760444,
      "contentHash": "1b06ecc79e75f836c446ccf286e671e4",
      "sourceName": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolOwnerActions": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3PoolOwnerActions.sol/IUniswapV3PoolOwnerActions.json"
        }
      }
    },
    "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
      "lastModificationDate": 1697559760635,
      "contentHash": "006c2457f96a386a69a8ac5e70838d2c",
      "sourceName": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolState": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3PoolState.sol/IUniswapV3PoolState.json"
        }
      }
    },
    "lib/v3-core/contracts/libraries/FixedPoint96.sol": {
      "lastModificationDate": 1697559760445,
      "contentHash": "f3ab03d6bbfd7c6834ecd3fc311cb0e7",
      "sourceName": "lib/v3-core/contracts/libraries/FixedPoint96.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.0",
      "artifacts": {
        "FixedPoint96": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "FixedPoint96.sol/FixedPoint96.json"
        }
      }
    },
    "lib/v3-core/contracts/libraries/FullMath.sol": {
      "lastModificationDate": 1697559760635,
      "contentHash": "2ca3e14806bc8bf648267136cffef969",
      "sourceName": "lib/v3-core/contracts/libraries/FullMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "FullMath": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "FullMath.sol/FullMath.json"
        }
      }
    },
    "lib/v3-core/contracts/libraries/TickMath.sol": {
      "lastModificationDate": 1697559760637,
      "contentHash": "bb9c21008aef589c6fb567344fb08942",
      "sourceName": "lib/v3-core/contracts/libraries/TickMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "TickMath": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TickMath.sol/TickMath.json"
        }
      }
    },
    "src/AccessManager.sol": {
      "lastModificationDate": 1697559280512,
      "contentHash": "7e55329d21448d6ea09a2fc328be798c",
      "sourceName": "src/AccessManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "src/SigningTools.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "AccessManager": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "AccessManager.sol/AccessManager.json"
        }
      }
    },
    "src/ExchangeConfig.sol": {
      "lastModificationDate": 1697559280512,
      "contentHash": "63fa0dc1d1d811c538bcfbb8d14f1607",
      "sourceName": "src/ExchangeConfig.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ExchangeConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ExchangeConfig.sol/ExchangeConfig.json"
        }
      }
    },
    "src/SALT.sol": {
      "lastModificationDate": 1697559280512,
      "contentHash": "de3eb52f815519c40ce5a906c07941e5",
      "sourceName": "src/SALT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "src/interfaces/ISalt.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "SALT": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SALT.sol/SALT.json"
        }
      }
    },
    "src/SigningTools.sol": {
      "lastModificationDate": 1697559280512,
      "contentHash": "9c730b10c5e009586b40802bb0ed6b8a",
      "sourceName": "src/SigningTools.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "SigningTools": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SigningTools.sol/SigningTools.json"
        }
      }
    },
    "src/Upkeep.sol": {
      "lastModificationDate": 1697559280512,
      "contentHash": "3632e3f576e5e97cbdcdf6931a037511",
      "sourceName": "src/Upkeep.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Upkeep": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Upkeep.sol/Upkeep.json"
        }
      }
    },
    "src/arbitrage/ArbitrageSearch.sol": {
      "lastModificationDate": 1697559280512,
      "contentHash": "580fbb617692f146b334003eb48664ec",
      "sourceName": "src/arbitrage/ArbitrageSearch.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ArbitrageSearch": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ArbitrageSearch.sol/ArbitrageSearch.json"
        }
      }
    },
    "src/arbitrage/tests/Arbitrage.t.sol": {
      "lastModificationDate": 1697559280512,
      "contentHash": "1e76d4cb4d29538cbdaf3d5c486a50b0",
      "sourceName": "src/arbitrage/tests/Arbitrage.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestArbitrage": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Arbitrage.t.sol/TestArbitrage.json"
        }
      }
    },
    "src/arbitrage/tests/ArbitrageGas.t.sol": {
      "lastModificationDate": 1697559280513,
      "contentHash": "128f24c30e008f15932a06da440da377",
      "sourceName": "src/arbitrage/tests/ArbitrageGas.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestArbitrage": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ArbitrageGas.t.sol/TestArbitrage.json"
        }
      }
    },
    "src/arbitrage/tests/TestArbitrageSearch.sol": {
      "lastModificationDate": 1697559280513,
      "contentHash": "001422d3f19eba0e9c74e1cffe302927",
      "sourceName": "src/arbitrage/tests/TestArbitrageSearch.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestArbitrageSearch": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TestArbitrageSearch.sol/TestArbitrageSearch.json"
        }
      }
    },
    "src/arbitrage/tests/TestArbitrageSearch.t.sol": {
      "lastModificationDate": 1697559280513,
      "contentHash": "fb1dba2cedd0087a1679defaf34cc7a3",
      "sourceName": "src/arbitrage/tests/TestArbitrageSearch.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/arbitrage/tests/TestArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/ForcedPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestArbitrageSearch2": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TestArbitrageSearch.t.sol/TestArbitrageSearch2.json"
        }
      }
    },
    "src/dao/DAO.sol": {
      "lastModificationDate": 1697559280513,
      "contentHash": "cfdaca668f02faf7580cad2a949ed1d0",
      "sourceName": "src/dao/DAO.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/Upkeep.sol",
        "src/dao/Parameters.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "DAO": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "DAO.sol/DAO.json"
        }
      }
    },
    "src/dao/DAOConfig.sol": {
      "lastModificationDate": 1697559280513,
      "contentHash": "52db08c11cce16f4b771256fe8d4b684",
      "sourceName": "src/dao/DAOConfig.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "src/dao/interfaces/IDAOConfig.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "DAOConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "DAOConfig.sol/DAOConfig.json"
        }
      }
    },
    "src/dao/Parameters.sol": {
      "lastModificationDate": 1697559280513,
      "contentHash": "9beca52dd07f9a171f708392a5a860db",
      "sourceName": "src/dao/Parameters.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Parameters": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Parameters.sol/Parameters.json"
        }
      }
    },
    "src/dao/Proposals.sol": {
      "lastModificationDate": 1697559280513,
      "contentHash": "e81f306af618b4a1330e736fb7f7aa23",
      "sourceName": "src/dao/Proposals.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Proposals": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Proposals.sol/Proposals.json"
        }
      }
    },
    "src/dao/interfaces/ICalledContract.sol": {
      "lastModificationDate": 1697559280514,
      "contentHash": "f4a98e9a536a39381bcee18683d3f19b",
      "sourceName": "src/dao/interfaces/ICalledContract.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ICalledContract": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ICalledContract.sol/ICalledContract.json"
        }
      }
    },
    "src/dao/interfaces/IDAO.sol": {
      "lastModificationDate": 1697559280514,
      "contentHash": "891b82f8e5d2864651d36a8539efd49e",
      "sourceName": "src/dao/interfaces/IDAO.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IDAO": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IDAO.sol/IDAO.json"
        }
      }
    },
    "src/dao/interfaces/IDAOConfig.sol": {
      "lastModificationDate": 1697559280514,
      "contentHash": "28f99afdccf901feda7bef0365ff2595",
      "sourceName": "src/dao/interfaces/IDAOConfig.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IDAOConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IDAOConfig.sol/IDAOConfig.json"
        }
      }
    },
    "src/dao/interfaces/IProposals.sol": {
      "lastModificationDate": 1697559280514,
      "contentHash": "e764b530cdad42da80e53583cb11ad57",
      "sourceName": "src/dao/interfaces/IProposals.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IProposals": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IProposals.sol/IProposals.json"
        }
      }
    },
    "src/dao/tests/DAO.t.sol": {
      "lastModificationDate": 1697564105821,
      "contentHash": "63da7aba1112f66b37c8125776580bed",
      "sourceName": "src/dao/tests/DAO.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dao/tests/TestCallReceiver.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestDAO": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "DAO.t.sol/TestDAO.json"
        }
      }
    },
    "src/dao/tests/Parameters.t.sol": {
      "lastModificationDate": 1697559280514,
      "contentHash": "70729d626d51b9e796fcae8af106b786",
      "sourceName": "src/dao/tests/Parameters.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/DAOConfig.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dao/tests/TestParameters.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsConfig.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/StableConfig.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingConfig.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestParametersOffchain": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Parameters.t.sol/TestParametersOffchain.json"
        }
      }
    },
    "src/dao/tests/Proposals.t.sol": {
      "lastModificationDate": 1697564105831,
      "contentHash": "e3646bd803127cee7b00d95b6c26e3c2",
      "sourceName": "src/dao/tests/Proposals.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestProposals": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Proposals.t.sol/TestProposals.json"
        }
      }
    },
    "src/dao/tests/TestCallReceiver.sol": {
      "lastModificationDate": 1697559280514,
      "contentHash": "a53676b2746e99c1b5f084112fbf8771",
      "sourceName": "src/dao/tests/TestCallReceiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "src/dao/interfaces/ICalledContract.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestCallReceiver": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TestCallReceiver.sol/TestCallReceiver.json"
        }
      }
    },
    "src/dao/tests/TestParameters.sol": {
      "lastModificationDate": 1697559280514,
      "contentHash": "48aec33a86ef01c87243a77386aa4e36",
      "sourceName": "src/dao/tests/TestParameters.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "src/dao/Parameters.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestParameters": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TestParameters.sol/TestParameters.json"
        }
      }
    },
    "src/dev/Deployment.sol": {
      "lastModificationDate": 1697564471884,
      "contentHash": "6f83acd207b77c4e5a04d02c6635e8a4",
      "sourceName": "src/dev/Deployment.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Deployment": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Deployment.sol/Deployment.json"
        }
      }
    },
    "src/dev/Utils.sol": {
      "lastModificationDate": 1697559280515,
      "contentHash": "c2f347ae35a61b1086cbcf854d767ec7",
      "sourceName": "src/dev/Utils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Utils": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Utils.sol/Utils.json"
        }
      }
    },
    "src/interfaces/IAccessManager.sol": {
      "lastModificationDate": 1697559280515,
      "contentHash": "7875c95b42a1da67a9f73e3524709c61",
      "sourceName": "src/interfaces/IAccessManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IAccessManager": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IAccessManager.sol/IAccessManager.json"
        }
      }
    },
    "src/interfaces/IExchangeConfig.sol": {
      "lastModificationDate": 1697559280515,
      "contentHash": "646d31689b41921a1a356c7a538966ef",
      "sourceName": "src/interfaces/IExchangeConfig.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IExchangeConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IExchangeConfig.sol/IExchangeConfig.json"
        }
      }
    },
    "src/interfaces/ISalt.sol": {
      "lastModificationDate": 1697559280515,
      "contentHash": "00261074d90e44437cf562ccca42cc18",
      "sourceName": "src/interfaces/ISalt.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ISalt": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ISalt.sol/ISalt.json"
        }
      }
    },
    "src/interfaces/IUpkeep.sol": {
      "lastModificationDate": 1697559280515,
      "contentHash": "d7ab6c10bb2eff56e546bc971a731b49",
      "sourceName": "src/interfaces/IUpkeep.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IUpkeep": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUpkeep.sol/IUpkeep.json"
        }
      }
    },
    "src/launch/Airdrop.sol": {
      "lastModificationDate": 1697559280515,
      "contentHash": "fef799fbe5f2e94d4a8c58454b08d1a4",
      "sourceName": "src/launch/Airdrop.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Airdrop": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Airdrop.sol/Airdrop.json"
        }
      }
    },
    "src/launch/BootstrapBallot.sol": {
      "lastModificationDate": 1697559280515,
      "contentHash": "d4846d64ca12948025e63739d84df596",
      "sourceName": "src/launch/BootstrapBallot.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "src/SigningTools.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "BootstrapBallot": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BootstrapBallot.sol/BootstrapBallot.json"
        }
      }
    },
    "src/launch/InitialDistribution.sol": {
      "lastModificationDate": 1697559280515,
      "contentHash": "d92e530bd1a1e5bf1cea1667998fc98d",
      "sourceName": "src/launch/InitialDistribution.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "InitialDistribution": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "InitialDistribution.sol/InitialDistribution.json"
        }
      }
    },
    "src/launch/interfaces/IAirdrop.sol": {
      "lastModificationDate": 1697559280515,
      "contentHash": "f78f81e14ee331a3ff4159e7bdfdc273",
      "sourceName": "src/launch/interfaces/IAirdrop.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IAirdrop": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IAirdrop.sol/IAirdrop.json"
        }
      }
    },
    "src/launch/interfaces/IBootstrapBallot.sol": {
      "lastModificationDate": 1697559280515,
      "contentHash": "ee69efff6112025ddd9ef2a9f039a838",
      "sourceName": "src/launch/interfaces/IBootstrapBallot.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IBootstrapBallot": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IBootstrapBallot.sol/IBootstrapBallot.json"
        }
      }
    },
    "src/launch/interfaces/IInitialDistribution.sol": {
      "lastModificationDate": 1697559280516,
      "contentHash": "69e18749ea099b35b0322f42d9744ca6",
      "sourceName": "src/launch/interfaces/IInitialDistribution.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "src/launch/interfaces/IBootstrapBallot.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IInitialDistribution": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IInitialDistribution.sol/IInitialDistribution.json"
        }
      }
    },
    "src/launch/tests/Airdrop.t.sol": {
      "lastModificationDate": 1697559280516,
      "contentHash": "8b7ede7ee220d7896656be1a49937c6f",
      "sourceName": "src/launch/tests/Airdrop.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestAirdrop": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Airdrop.t.sol/TestAirdrop.json"
        }
      }
    },
    "src/launch/tests/BootstrapBallot.t.sol": {
      "lastModificationDate": 1697559280516,
      "contentHash": "1e06d307444af0faf294c0dab852babd",
      "sourceName": "src/launch/tests/BootstrapBallot.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestBootstrapBallot": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BootstrapBallot.t.sol/TestBootstrapBallot.json"
        }
      }
    },
    "src/launch/tests/InitialDistribution.t.sol": {
      "lastModificationDate": 1697559280516,
      "contentHash": "9565cfec92fc528b0978223715ec7f5c",
      "sourceName": "src/launch/tests/InitialDistribution.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestInitialDistribution": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "InitialDistribution.t.sol/TestInitialDistribution.json"
        }
      }
    },
    "src/launch/tests/TestBootstrapBallot.sol": {
      "lastModificationDate": 1697559280516,
      "contentHash": "fdb8f68d8353ab83bce18b216213d1b8",
      "sourceName": "src/launch/tests/TestBootstrapBallot.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/SigningTools.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestBootstrapBallot": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TestBootstrapBallot.sol/TestBootstrapBallot.json"
        }
      }
    },
    "src/pools/Counterswap.sol": {
      "lastModificationDate": 1697559280516,
      "contentHash": "b964050536446fb772265d00c307663b",
      "sourceName": "src/pools/Counterswap.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Counterswap": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Counterswap.sol/Counterswap.json"
        }
      }
    },
    "src/pools/PoolMath.sol": {
      "lastModificationDate": 1697559280516,
      "contentHash": "26febf1ec12548efb1a5162d6f2872ab",
      "sourceName": "src/pools/PoolMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "PoolMath": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "PoolMath.sol/PoolMath.json"
        }
      }
    },
    "src/pools/PoolStats.sol": {
      "lastModificationDate": 1697559280516,
      "contentHash": "292f16e2fc1b63e75acebf655aa130e4",
      "sourceName": "src/pools/PoolStats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "PoolStats": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "PoolStats.sol/PoolStats.json"
        }
      }
    },
    "src/pools/PoolUtils.sol": {
      "lastModificationDate": 1697559280516,
      "contentHash": "fddc048aacc71c3a7bdda08e55691f35",
      "sourceName": "src/pools/PoolUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "PoolUtils": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "PoolUtils.sol/PoolUtils.json"
        }
      }
    },
    "src/pools/Pools.sol": {
      "lastModificationDate": 1697559280517,
      "contentHash": "8ffb11667d27f13b7db503c371f82eb4",
      "sourceName": "src/pools/Pools.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Pools": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Pools.sol/Pools.json"
        }
      }
    },
    "src/pools/PoolsConfig.sol": {
      "lastModificationDate": 1697559280517,
      "contentHash": "e6c04debd6245c5e0572b03177e4c496",
      "sourceName": "src/pools/PoolsConfig.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "PoolsConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "PoolsConfig.sol/PoolsConfig.json"
        }
      }
    },
    "src/pools/interfaces/IPoolStats.sol": {
      "lastModificationDate": 1697559280517,
      "contentHash": "e4bcb75807625300f320b17281fa1b50",
      "sourceName": "src/pools/interfaces/IPoolStats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IPoolStats": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IPoolStats.sol/IPoolStats.json"
        }
      }
    },
    "src/pools/interfaces/IPools.sol": {
      "lastModificationDate": 1697559280517,
      "contentHash": "926c7c3feee1ca30dc6fe27705f1d457",
      "sourceName": "src/pools/interfaces/IPools.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IPools": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IPools.sol/IPools.json"
        }
      }
    },
    "src/pools/interfaces/IPoolsConfig.sol": {
      "lastModificationDate": 1697559280517,
      "contentHash": "ae03dc1c8d481f5917ac3b4bc063ca45",
      "sourceName": "src/pools/interfaces/IPoolsConfig.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IPoolsConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IPoolsConfig.sol/IPoolsConfig.json"
        }
      }
    },
    "src/pools/tests/Counterswap.t.sol": {
      "lastModificationDate": 1697564105844,
      "contentHash": "f0e87b5f3b8653ec37fb8effdb4a1f4c",
      "sourceName": "src/pools/tests/Counterswap.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/pools/tests/TestPools.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/ForcedPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestCounterswap2": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Counterswap.t.sol/TestCounterswap2.json"
        }
      }
    },
    "src/pools/tests/PoolStats.t.sol": {
      "lastModificationDate": 1697559280517,
      "contentHash": "a0629da64334f7161aa65e7c4a28150d",
      "sourceName": "src/pools/tests/PoolStats.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestPoolStats": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "PoolStats.t.sol/TestPoolStats.json"
        }
      }
    },
    "src/pools/tests/Pools.t.sol": {
      "lastModificationDate": 1697559280518,
      "contentHash": "f7c30de06a7f1edc0f34bb473d7f5abe",
      "sourceName": "src/pools/tests/Pools.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/pools/tests/TestPools.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestPools2": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Pools.t.sol/TestPools2.json"
        }
      }
    },
    "src/pools/tests/PoolsAndCounterswap.t.sol": {
      "lastModificationDate": 1697564105844,
      "contentHash": "a7bf829808d267f6d20f54ea21b0d864",
      "sourceName": "src/pools/tests/PoolsAndCounterswap.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestPoolsAndCounterswap": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "PoolsAndCounterswap.t.sol/TestPoolsAndCounterswap.json"
        }
      }
    },
    "src/pools/tests/PoolsConfig.t.sol": {
      "lastModificationDate": 1697564105821,
      "contentHash": "a95146980c1c9ee8551f51d7d2422ec9",
      "sourceName": "src/pools/tests/PoolsConfig.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "PoolsConfigTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "PoolsConfig.t.sol/PoolsConfigTest.json"
        }
      }
    },
    "src/pools/tests/TestPools.sol": {
      "lastModificationDate": 1697559280518,
      "contentHash": "31f68790c9d9cc434d6ab39edcde98f5",
      "sourceName": "src/pools/tests/TestPools.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestPools": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TestPools.sol/TestPools.json"
        }
      }
    },
    "src/price_feed/CoreChainlinkFeed.sol": {
      "lastModificationDate": 1697559280518,
      "contentHash": "7e4581526a53f2e7263754478523c969",
      "sourceName": "src/price_feed/CoreChainlinkFeed.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "src/price_feed/interfaces/IPriceFeed.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "CoreChainlinkFeed": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "CoreChainlinkFeed.sol/CoreChainlinkFeed.json"
        }
      }
    },
    "src/price_feed/CoreSaltyFeed.sol": {
      "lastModificationDate": 1697559280518,
      "contentHash": "36885eb8b4758bd57520e791b1939f22",
      "sourceName": "src/price_feed/CoreSaltyFeed.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPools.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "CoreSaltyFeed": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "CoreSaltyFeed.sol/CoreSaltyFeed.json"
        }
      }
    },
    "src/price_feed/CoreUniswapFeed.sol": {
      "lastModificationDate": 1697559280518,
      "contentHash": "a2d3bc08d10867fdc63c4d99b549531a",
      "sourceName": "src/price_feed/CoreUniswapFeed.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "lib/v3-core/contracts/libraries/FixedPoint96.sol",
        "lib/v3-core/contracts/libraries/FullMath.sol",
        "lib/v3-core/contracts/libraries/TickMath.sol",
        "src/price_feed/interfaces/IPriceFeed.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "CoreUniswapFeed": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "CoreUniswapFeed.sol/CoreUniswapFeed.json"
        }
      }
    },
    "src/price_feed/PriceAggregator.sol": {
      "lastModificationDate": 1697559280518,
      "contentHash": "12adbef2a30866ca1fe8ce7a8b26b0be",
      "sourceName": "src/price_feed/PriceAggregator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "PriceAggregator": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "PriceAggregator.sol/PriceAggregator.json"
        }
      }
    },
    "src/price_feed/interfaces/IPriceAggregator.sol": {
      "lastModificationDate": 1697559280519,
      "contentHash": "b0731c3dccbe83a2f891e234c4971d1c",
      "sourceName": "src/price_feed/interfaces/IPriceAggregator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "src/price_feed/interfaces/IPriceFeed.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IPriceAggregator": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IPriceAggregator.sol/IPriceAggregator.json"
        }
      }
    },
    "src/price_feed/interfaces/IPriceFeed.sol": {
      "lastModificationDate": 1697559280519,
      "contentHash": "c02d0820731adfce943a3c9cffa3cb3d",
      "sourceName": "src/price_feed/interfaces/IPriceFeed.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IPriceFeed": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IPriceFeed.sol/IPriceFeed.json"
        }
      }
    },
    "src/price_feed/tests/CoreChainlinkFeed.t.sol": {
      "lastModificationDate": 1697559280519,
      "contentHash": "68c1a1223717786c584cd3546f621658",
      "sourceName": "src/price_feed/tests/CoreChainlinkFeed.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "src/price_feed/CoreChainlinkFeed.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/TestChainlinkAggregator.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestCoreChainlinkFeed": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "CoreChainlinkFeed.t.sol/TestCoreChainlinkFeed.json"
        }
      }
    },
    "src/price_feed/tests/CoreFeeds.t.sol": {
      "lastModificationDate": 1697559280519,
      "contentHash": "b26a43b2aa58a0aedb01819f4ce448d9",
      "sourceName": "src/price_feed/tests/CoreFeeds.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "lib/v3-core/contracts/libraries/FixedPoint96.sol",
        "lib/v3-core/contracts/libraries/FullMath.sol",
        "lib/v3-core/contracts/libraries/TickMath.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/CoreChainlinkFeed.sol",
        "src/price_feed/CoreSaltyFeed.sol",
        "src/price_feed/CoreUniswapFeed.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestCoreFeeds": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "CoreFeeds.t.sol/TestCoreFeeds.json"
        }
      }
    },
    "src/price_feed/tests/CoreSaltyFeed.t.sol": {
      "lastModificationDate": 1697563371150,
      "contentHash": "37cec8272fd977bb65696be83b234df1",
      "sourceName": "src/price_feed/tests/CoreSaltyFeed.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/CoreSaltyFeed.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestCoreSaltyFeed": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "CoreSaltyFeed.t.sol/TestCoreSaltyFeed.json"
        }
      }
    },
    "src/price_feed/tests/CoreUniswapFeed.t.sol": {
      "lastModificationDate": 1697559280519,
      "contentHash": "d66255dce8f2289d815069615761ab16",
      "sourceName": "src/price_feed/tests/CoreUniswapFeed.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "lib/v3-core/contracts/libraries/FixedPoint96.sol",
        "lib/v3-core/contracts/libraries/FullMath.sol",
        "lib/v3-core/contracts/libraries/TickMath.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/CoreUniswapFeed.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/price_feed/tests/TestUniswapFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestCoreUniswapFeed": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "CoreUniswapFeed.t.sol/TestCoreUniswapFeed.json"
        }
      }
    },
    "src/price_feed/tests/EthFeeds.t.sol": {
      "lastModificationDate": 1697559280519,
      "contentHash": "14ea18a9857516ae9094355e73c6e6eb",
      "sourceName": "src/price_feed/tests/EthFeeds.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "lib/v3-core/contracts/libraries/FixedPoint96.sol",
        "lib/v3-core/contracts/libraries/FullMath.sol",
        "lib/v3-core/contracts/libraries/TickMath.sol",
        "src/ExchangeConfig.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPools.sol",
        "src/price_feed/CoreChainlinkFeed.sol",
        "src/price_feed/CoreSaltyFeed.sol",
        "src/price_feed/CoreUniswapFeed.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestEthFeeds": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "EthFeeds.t.sol/TestEthFeeds.json"
        }
      }
    },
    "src/price_feed/tests/ForcedPriceFeed.sol": {
      "lastModificationDate": 1697559280519,
      "contentHash": "db7c5dfcb8c8dc61970696540f85ee84",
      "sourceName": "src/price_feed/tests/ForcedPriceFeed.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ForcedPriceFeed": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ForcedPriceFeed.sol/ForcedPriceFeed.json"
        }
      }
    },
    "src/price_feed/tests/IForcedPriceFeed.sol": {
      "lastModificationDate": 1697559280519,
      "contentHash": "bfef87b19f8e41b9836f1e226ff81308",
      "sourceName": "src/price_feed/tests/IForcedPriceFeed.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IForcedPriceFeed": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IForcedPriceFeed.sol/IForcedPriceFeed.json"
        }
      }
    },
    "src/price_feed/tests/PriceAggregator.t.sol": {
      "lastModificationDate": 1697559280520,
      "contentHash": "3e392a6ba44c1cf9f5ff7ca5649db0e1",
      "sourceName": "src/price_feed/tests/PriceAggregator.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/ForcedPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/price_feed/tests/TestPriceAggregator.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestPriceAggreagator": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "PriceAggregator.t.sol/TestPriceAggreagator.json"
        }
      }
    },
    "src/price_feed/tests/TestChainlinkAggregator.sol": {
      "lastModificationDate": 1697559280520,
      "contentHash": "05b8e6515c8077762554b78cb8b95bcb",
      "sourceName": "src/price_feed/tests/TestChainlinkAggregator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestChainlinkAggregator": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TestChainlinkAggregator.sol/TestChainlinkAggregator.json"
        }
      }
    },
    "src/price_feed/tests/TestPriceAggregator.sol": {
      "lastModificationDate": 1697559280520,
      "contentHash": "907357dac3be3344427a1d0d9f6332dd",
      "sourceName": "src/price_feed/tests/TestPriceAggregator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestPriceAggregator": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TestPriceAggregator.sol/TestPriceAggregator.json"
        }
      }
    },
    "src/price_feed/tests/TestUniswapFeed.sol": {
      "lastModificationDate": 1697559280520,
      "contentHash": "c06f493bff939e369f9bfde438763d93",
      "sourceName": "src/price_feed/tests/TestUniswapFeed.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "lib/v3-core/contracts/libraries/FixedPoint96.sol",
        "lib/v3-core/contracts/libraries/FullMath.sol",
        "lib/v3-core/contracts/libraries/TickMath.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/price_feed/CoreUniswapFeed.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestUniswapFeed": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TestUniswapFeed.sol/TestUniswapFeed.json"
        }
      }
    },
    "src/rewards/Emissions.sol": {
      "lastModificationDate": 1697559280520,
      "contentHash": "273db09af52740519f84e2a50efef8e0",
      "sourceName": "src/rewards/Emissions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Emissions": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Emissions.sol/Emissions.json"
        }
      }
    },
    "src/rewards/RewardsConfig.sol": {
      "lastModificationDate": 1697559280520,
      "contentHash": "0ef6d8bfb9d3d067dd230b7095971af0",
      "sourceName": "src/rewards/RewardsConfig.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "src/rewards/interfaces/IRewardsConfig.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "RewardsConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "RewardsConfig.sol/RewardsConfig.json"
        }
      }
    },
    "src/rewards/RewardsEmitter.sol": {
      "lastModificationDate": 1697559280520,
      "contentHash": "fe783bc87d95518317b5cf17920aebdf",
      "sourceName": "src/rewards/RewardsEmitter.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "RewardsEmitter": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "RewardsEmitter.sol/RewardsEmitter.json"
        }
      }
    },
    "src/rewards/SaltRewards.sol": {
      "lastModificationDate": 1697559280520,
      "contentHash": "2fe1cfc25dce97d6a5d3e14fffd3efc2",
      "sourceName": "src/rewards/SaltRewards.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "SaltRewards": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SaltRewards.sol/SaltRewards.json"
        }
      }
    },
    "src/rewards/interfaces/IEmissions.sol": {
      "lastModificationDate": 1697559280520,
      "contentHash": "f4c1ba274c3b3a06e0cb0f01ef39bd70",
      "sourceName": "src/rewards/interfaces/IEmissions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IEmissions": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IEmissions.sol/IEmissions.json"
        }
      }
    },
    "src/rewards/interfaces/IRewardsConfig.sol": {
      "lastModificationDate": 1697559280521,
      "contentHash": "efbefd741ff5ea2b18f50f7535f8fee1",
      "sourceName": "src/rewards/interfaces/IRewardsConfig.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IRewardsConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IRewardsConfig.sol/IRewardsConfig.json"
        }
      }
    },
    "src/rewards/interfaces/IRewardsEmitter.sol": {
      "lastModificationDate": 1697559280521,
      "contentHash": "86aeb8b073eac00c686971b2058e9b09",
      "sourceName": "src/rewards/interfaces/IRewardsEmitter.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IRewardsEmitter": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IRewardsEmitter.sol/IRewardsEmitter.json"
        }
      }
    },
    "src/rewards/interfaces/ISaltRewards.sol": {
      "lastModificationDate": 1697559280521,
      "contentHash": "e81b6234c5f00f5b7a5d157ba2807077",
      "sourceName": "src/rewards/interfaces/ISaltRewards.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ISaltRewards": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ISaltRewards.sol/ISaltRewards.json"
        }
      }
    },
    "src/rewards/tests/Emissions.t.sol": {
      "lastModificationDate": 1697564105814,
      "contentHash": "ed5e773da37a82e0c6881b6441083501",
      "sourceName": "src/rewards/tests/Emissions.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestEmissions": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Emissions.t.sol/TestEmissions.json"
        }
      }
    },
    "src/rewards/tests/RewardsEmitter.t.sol": {
      "lastModificationDate": 1697564105820,
      "contentHash": "9e3b3bd875a996ec807104478edbed33",
      "sourceName": "src/rewards/tests/RewardsEmitter.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestRewardsEmitter": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "RewardsEmitter.t.sol/TestRewardsEmitter.json"
        }
      }
    },
    "src/rewards/tests/SaltRewards.t.sol": {
      "lastModificationDate": 1697564105820,
      "contentHash": "7cf712f0e1c56b955e934d533719c1fb",
      "sourceName": "src/rewards/tests/SaltRewards.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/rewards/tests/TestSaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestSaltRewards2": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SaltRewards.t.sol/TestSaltRewards2.json"
        }
      }
    },
    "src/rewards/tests/TestSaltRewards.sol": {
      "lastModificationDate": 1697559280521,
      "contentHash": "49c5b1cb6709e17d396107e6ee22b9a8",
      "sourceName": "src/rewards/tests/TestSaltRewards.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestSaltRewards": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TestSaltRewards.sol/TestSaltRewards.json"
        }
      }
    },
    "src/root_tests/AccessManager.t.sol": {
      "lastModificationDate": 1697559280522,
      "contentHash": "26380223e3bfc03ee4622c70c6fb25a3",
      "sourceName": "src/root_tests/AccessManager.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestAccessManager": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "AccessManager.t.sol/TestAccessManager.json"
        }
      }
    },
    "src/root_tests/Deployment.t.sol": {
      "lastModificationDate": 1697559280522,
      "contentHash": "4607695eb84be22fe5fee5c1f7547310",
      "sourceName": "src/root_tests/Deployment.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestDeployment": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Deployment.t.sol/TestDeployment.json"
        }
      }
    },
    "src/root_tests/ExchangeConfig.t.sol": {
      "lastModificationDate": 1697559280522,
      "contentHash": "c6772e950ff0192cafd7460db2c1e37f",
      "sourceName": "src/root_tests/ExchangeConfig.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestExchangeConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ExchangeConfig.t.sol/TestExchangeConfig.json"
        }
      }
    },
    "src/root_tests/ITestUpkeep.sol": {
      "lastModificationDate": 1697559280522,
      "contentHash": "e08c6fed496b2364963f1da2291ec326",
      "sourceName": "src/root_tests/ITestUpkeep.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ITestUpkeep": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ITestUpkeep.sol/ITestUpkeep.json"
        }
      }
    },
    "src/root_tests/IUpkeepFlawed.sol": {
      "lastModificationDate": 1697559280522,
      "contentHash": "b18f90855d8a6fd1dfa12d5771f00528",
      "sourceName": "src/root_tests/IUpkeepFlawed.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IUpkeepFlawed": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUpkeepFlawed.sol/IUpkeepFlawed.json"
        }
      }
    },
    "src/root_tests/Salt.t.sol": {
      "lastModificationDate": 1697559280522,
      "contentHash": "42d22841bab025caa2fb7a339824b627",
      "sourceName": "src/root_tests/Salt.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SALT.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestSalt": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Salt.t.sol/TestSalt.json"
        }
      }
    },
    "src/root_tests/TestERC20.sol": {
      "lastModificationDate": 1697559280522,
      "contentHash": "6a85e7ed681e7eb2686e9030d66822e0",
      "sourceName": "src/root_tests/TestERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestERC20": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TestERC20.sol/TestERC20.json"
        }
      }
    },
    "src/root_tests/Upkeep.t.sol": {
      "lastModificationDate": 1697559280522,
      "contentHash": "1914e3fbc5144d13f65e72eba4e37db6",
      "sourceName": "src/root_tests/Upkeep.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/DAOConfig.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/launch/tests/TestBootstrapBallot.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/ITestUpkeep.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestUpkeep2": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Upkeep.t.sol/TestUpkeep2.json"
        }
      }
    },
    "src/root_tests/UpkeepEdge.t.sol": {
      "lastModificationDate": 1697559280522,
      "contentHash": "a768f1a83ca44a3da20c94f68b5cb376",
      "sourceName": "src/root_tests/UpkeepEdge.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/DAOConfig.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/launch/tests/TestBootstrapBallot.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/ITestUpkeep.sol",
        "src/root_tests/IUpkeepFlawed.sol",
        "src/root_tests/TestERC20.sol",
        "src/root_tests/UpkeepFlawed.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestUpkeepEdge": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "UpkeepEdge.t.sol/TestUpkeepEdge.json"
        }
      }
    },
    "src/root_tests/UpkeepFlawed.sol": {
      "lastModificationDate": 1697559280522,
      "contentHash": "40c87795681bf6a1dfdb1ee11907648d",
      "sourceName": "src/root_tests/UpkeepFlawed.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "src/Upkeep.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "UpkeepFlawed": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "UpkeepFlawed.sol/UpkeepFlawed.json"
        }
      }
    },
    "src/root_tests/UpkeepFlawed.t.sol": {
      "lastModificationDate": 1697559280523,
      "contentHash": "ddbf49350db6b49c2d2e0e560ca799c5",
      "sourceName": "src/root_tests/UpkeepFlawed.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/DAOConfig.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/launch/tests/TestBootstrapBallot.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/ITestUpkeep.sol",
        "src/root_tests/IUpkeepFlawed.sol",
        "src/root_tests/TestERC20.sol",
        "src/root_tests/UpkeepFlawed.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestUpkeepFlawed": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "UpkeepFlawed.t.sol/TestUpkeepFlawed.json"
        }
      }
    },
    "src/root_tests/UpkeepGasUsage.t.sol": {
      "lastModificationDate": 1697559280523,
      "contentHash": "4f20d821a38a58ae169a52789b06749d",
      "sourceName": "src/root_tests/UpkeepGasUsage.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestMaxUpkeep": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "UpkeepGasUsage.t.sol/TestMaxUpkeep.json"
        }
      }
    },
    "src/scenario_tests/Comprehensive1.t.sol": {
      "lastModificationDate": 1697564220168,
      "contentHash": "788d6d7c5e69fb5efdec2af25e81f41c",
      "sourceName": "src/scenario_tests/Comprehensive1.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestComprehensive1": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Comprehensive1.t.sol/TestComprehensive1.json"
        }
      }
    },
    "src/stable/Collateral.sol": {
      "lastModificationDate": 1697559280523,
      "contentHash": "2b8c54bfca785c02491a096c6e7ad3f2",
      "sourceName": "src/stable/Collateral.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Collateral": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Collateral.sol/Collateral.json"
        }
      }
    },
    "src/stable/StableConfig.sol": {
      "lastModificationDate": 1697559280523,
      "contentHash": "c14c84144c20a90058c382b1a62bd8b7",
      "sourceName": "src/stable/StableConfig.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/stable/interfaces/IStableConfig.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "StableConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StableConfig.sol/StableConfig.json"
        }
      }
    },
    "src/stable/USDS.sol": {
      "lastModificationDate": 1697559280523,
      "contentHash": "2d97f86ea3fc3df4501c6c9421345d1f",
      "sourceName": "src/stable/USDS.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "USDS": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "USDS.sol/USDS.json"
        }
      }
    },
    "src/stable/interfaces/ICollateral.sol": {
      "lastModificationDate": 1697559280523,
      "contentHash": "e1937aef0bcbc0589512697154f654a4",
      "sourceName": "src/stable/interfaces/ICollateral.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ICollateral": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ICollateral.sol/ICollateral.json"
        }
      }
    },
    "src/stable/interfaces/IStableConfig.sol": {
      "lastModificationDate": 1697559280523,
      "contentHash": "5b9d9d13693f2309d140c2a345874bcd",
      "sourceName": "src/stable/interfaces/IStableConfig.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "src/price_feed/interfaces/IPriceFeed.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IStableConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IStableConfig.sol/IStableConfig.json"
        }
      }
    },
    "src/stable/interfaces/IUSDS.sol": {
      "lastModificationDate": 1697559280524,
      "contentHash": "c8ea23c22ff0e8fa51414e8fe64b5a97",
      "sourceName": "src/stable/interfaces/IUSDS.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IUSDS": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUSDS.sol/IUSDS.json"
        }
      }
    },
    "src/stable/tests/Collateral.t.sol": {
      "lastModificationDate": 1697564105837,
      "contentHash": "91a5bd4cf11d7a640b1f52ad9e705c97",
      "sourceName": "src/stable/tests/Collateral.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/ForcedPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestCollateral": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Collateral.t.sol/TestCollateral.json"
        }
      }
    },
    "src/stable/tests/StableConfig.t.sol": {
      "lastModificationDate": 1697559280524,
      "contentHash": "6b85727d34155e2969513be93c560fca",
      "sourceName": "src/stable/tests/StableConfig.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/stable/StableConfig.sol",
        "src/stable/interfaces/IStableConfig.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestStableConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StableConfig.t.sol/TestStableConfig.json"
        }
      }
    },
    "src/stable/tests/USDS.t.sol": {
      "lastModificationDate": 1697559280524,
      "contentHash": "de9aa9190510a9bbf59b3a34c60dcba4",
      "sourceName": "src/stable/tests/USDS.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "USDSTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "USDS.t.sol/USDSTest.json"
        }
      }
    },
    "src/staking/Liquidity.sol": {
      "lastModificationDate": 1697559280524,
      "contentHash": "e616d067de3a5b5ae17679c31ad74f88",
      "sourceName": "src/staking/Liquidity.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Liquidity": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Liquidity.sol/Liquidity.json"
        }
      }
    },
    "src/staking/Staking.sol": {
      "lastModificationDate": 1697559280524,
      "contentHash": "889a794fb98e6f5f7217f50c4d0ee7b4",
      "sourceName": "src/staking/Staking.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Staking": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Staking.sol/Staking.json"
        }
      }
    },
    "src/staking/StakingConfig.sol": {
      "lastModificationDate": 1697559280524,
      "contentHash": "32a785328ab7945743aae05dcecb7c7b",
      "sourceName": "src/staking/StakingConfig.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "src/staking/interfaces/IStakingConfig.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "StakingConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StakingConfig.sol/StakingConfig.json"
        }
      }
    },
    "src/staking/StakingRewards.sol": {
      "lastModificationDate": 1697559280524,
      "contentHash": "2e5c23f08c173d7151b91ac55b1bcf8d",
      "sourceName": "src/staking/StakingRewards.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "StakingRewards": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StakingRewards.sol/StakingRewards.json"
        }
      }
    },
    "src/staking/interfaces/ILiquidity.sol": {
      "lastModificationDate": 1697559280525,
      "contentHash": "959bf8136c28e633ff055471e5c005fe",
      "sourceName": "src/staking/interfaces/ILiquidity.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ILiquidity": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ILiquidity.sol/ILiquidity.json"
        }
      }
    },
    "src/staking/interfaces/IStaking.sol": {
      "lastModificationDate": 1697559280525,
      "contentHash": "82661a5c3436fd5ff539611963b28977",
      "sourceName": "src/staking/interfaces/IStaking.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IStaking": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IStaking.sol/IStaking.json"
        }
      }
    },
    "src/staking/interfaces/IStakingConfig.sol": {
      "lastModificationDate": 1697559280525,
      "contentHash": "baaee0d6940c760b9ff8fd1e716f6986",
      "sourceName": "src/staking/interfaces/IStakingConfig.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IStakingConfig": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IStakingConfig.sol/IStakingConfig.json"
        }
      }
    },
    "src/staking/interfaces/IStakingRewards.sol": {
      "lastModificationDate": 1697559280525,
      "contentHash": "2e0c9a4360ce1e87ff66dd80107db725",
      "sourceName": "src/staking/interfaces/IStakingRewards.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IStakingRewards": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IStakingRewards.sol/IStakingRewards.json"
        }
      }
    },
    "src/staking/tests/Liquidity.t.sol": {
      "lastModificationDate": 1697564105809,
      "contentHash": "e1f7f27798d7cc597468e1a934eeb4b8",
      "sourceName": "src/staking/tests/Liquidity.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "LiquidityTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Liquidity.t.sol/LiquidityTest.json"
        }
      }
    },
    "src/staking/tests/Staking.t.sol": {
      "lastModificationDate": 1697564105814,
      "contentHash": "96ba9455640cb20cad0042246ef2dc4d",
      "sourceName": "src/staking/tests/Staking.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "StakingTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Staking.t.sol/StakingTest.json"
        }
      }
    },
    "src/staking/tests/StakingRewards.t.sol": {
      "lastModificationDate": 1697564105820,
      "contentHash": "b80a37ef93a3d69da2f5ea7e3a42c2fd",
      "sourceName": "src/staking/tests/StakingRewards.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/abdk-libraries-solidity/ABDKMathQuad.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "lib/solpretty/lib/forge-std/lib/ds-test/src/test.sol",
        "lib/solpretty/lib/forge-std/src/Base.sol",
        "lib/solpretty/lib/forge-std/src/StdAssertions.sol",
        "lib/solpretty/lib/forge-std/src/StdChains.sol",
        "lib/solpretty/lib/forge-std/src/StdCheats.sol",
        "lib/solpretty/lib/forge-std/src/StdError.sol",
        "lib/solpretty/lib/forge-std/src/StdInvariant.sol",
        "lib/solpretty/lib/forge-std/src/StdJson.sol",
        "lib/solpretty/lib/forge-std/src/StdMath.sol",
        "lib/solpretty/lib/forge-std/src/StdStorage.sol",
        "lib/solpretty/lib/forge-std/src/StdStyle.sol",
        "lib/solpretty/lib/forge-std/src/StdUtils.sol",
        "lib/solpretty/lib/forge-std/src/Test.sol",
        "lib/solpretty/lib/forge-std/src/Vm.sol",
        "lib/solpretty/lib/forge-std/src/console.sol",
        "lib/solpretty/lib/forge-std/src/console2.sol",
        "lib/solpretty/lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solpretty/lib/forge-std/src/safeconsole.sol",
        "lib/solpretty/lib/solady/src/utils/LibString.sol",
        "lib/solpretty/src/LibFunctionCast.sol",
        "lib/solpretty/src/LibUnicode.sol",
        "lib/solpretty/src/SolKawai.sol",
        "lib/solpretty/src/SolPretty.sol",
        "lib/solpretty/src/SolPrettyTools.sol",
        "src/AccessManager.sol",
        "src/ExchangeConfig.sol",
        "src/SigningTools.sol",
        "src/Upkeep.sol",
        "src/arbitrage/ArbitrageSearch.sol",
        "src/dao/DAO.sol",
        "src/dao/Parameters.sol",
        "src/dao/Proposals.sol",
        "src/dao/interfaces/ICalledContract.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/dao/interfaces/IDAOConfig.sol",
        "src/dao/interfaces/IProposals.sol",
        "src/dev/Deployment.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/Airdrop.sol",
        "src/launch/BootstrapBallot.sol",
        "src/launch/InitialDistribution.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/Counterswap.sol",
        "src/pools/PoolMath.sol",
        "src/pools/PoolStats.sol",
        "src/pools/PoolUtils.sol",
        "src/pools/Pools.sol",
        "src/pools/PoolsConfig.sol",
        "src/pools/interfaces/IPoolStats.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/price_feed/PriceAggregator.sol",
        "src/price_feed/interfaces/IPriceAggregator.sol",
        "src/price_feed/interfaces/IPriceFeed.sol",
        "src/price_feed/tests/IForcedPriceFeed.sol",
        "src/rewards/Emissions.sol",
        "src/rewards/RewardsEmitter.sol",
        "src/rewards/SaltRewards.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsConfig.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/root_tests/TestERC20.sol",
        "src/stable/Collateral.sol",
        "src/stable/USDS.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IStableConfig.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/Liquidity.sol",
        "src/staking/Staking.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStaking.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol",
        "src/staking/tests/TestStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "SharedRewardsTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StakingRewards.t.sol/SharedRewardsTest.json"
        }
      }
    },
    "src/staking/tests/TestStakingRewards.sol": {
      "lastModificationDate": 1697559280525,
      "contentHash": "09560409ae2333eeb2c48e55c59fa357",
      "sourceName": "src/staking/tests/TestStakingRewards.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/dao/interfaces/IDAO.sol",
        "src/interfaces/IAccessManager.sol",
        "src/interfaces/IExchangeConfig.sol",
        "src/interfaces/ISalt.sol",
        "src/interfaces/IUpkeep.sol",
        "src/launch/interfaces/IAirdrop.sol",
        "src/launch/interfaces/IBootstrapBallot.sol",
        "src/launch/interfaces/IInitialDistribution.sol",
        "src/pools/interfaces/IPools.sol",
        "src/pools/interfaces/IPoolsConfig.sol",
        "src/rewards/interfaces/IEmissions.sol",
        "src/rewards/interfaces/IRewardsEmitter.sol",
        "src/rewards/interfaces/ISaltRewards.sol",
        "src/stable/interfaces/ICollateral.sol",
        "src/stable/interfaces/IUSDS.sol",
        "src/staking/StakingRewards.sol",
        "src/staking/interfaces/ILiquidity.sol",
        "src/staking/interfaces/IStakingConfig.sol",
        "src/staking/interfaces/IStakingRewards.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestStakingRewards": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TestStakingRewards.sol/TestStakingRewards.json"
        }
      }
    }
  }
}